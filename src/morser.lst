morser                                                                                                                  PAGE 1
                         1     cseg at 0h
0000 02001F              2     jmp INIT
                         3
                         4     ; Wait for first user input
                         5     org 0bh ; adresse v on timer interrupt
000B 12007D              6     call LONG_PRESS_DETECED
000E 32                  7     reti ; return from interupt
                         8
                         9     org 1bh
001B 1200B1             10     call TIME_OVER
001E 32                 11     reti
                        12
                        13
                        14     INIT:
  002A                  15             TIMER_START EQU 42d
  0080                  16             BUTTON EQU P0.0
                        17
                        18     ; Display init
001F 7430               19             MOV A,#30H ; Use 1 line and 5x7 matrix
0021 314A               20             ACALL CMND
0023 740F               21             MOV A,#0FH ; LCD ON, cursor ON, cursor blinking ON
0025 314A               22             ACALL CMND
0027 7401               23             MOV A,#01H ; Clear screen
0029 314A               24             ACALL CMND
002B 7406               25             MOV A,#06H ; shift cursor right
002D 314A               26             ACALL CMND
002F 7480               27             MOV A,#80H ; postion cursor
0031 314A               28             ACALL CMND
                        29     ; End display init
0033 75A88A             30             MOV IE, #10001010b ;enables interupt
0036 7801               31             MOV R0, #1h
0038 7BBE               32             MOV R3, #190d; Error value
003A 7D00               33             MOV R5, #0h
003C 758900             34             MOV TMOD, #00000000b
003F 020042             35             JMP BTN_LOOP
                        36
                        37
                        38     BTN_LOOP:; !pressed
0042 C28C               39             clr tr0
                        40
0044 B8013B             41             CJNE R0, #1h, ANALYZE_PREV
                        42             ;Run timer to detect break
0047 BD0021             43             CJNE R5, #0h, START_WAIT_TIMER
004A 30800E             44             JNB BUTTON, START_TIMER
004D 80F3               45             JMP BTN_LOOP
                        46
                        47
                        48     PRESSED:
004F 7800               49             MOV R0, #0
0051 C28E               50             CLR TR1
0053 3080F9             51             JNB BUTTON, PRESSED
0056 7D01               52             MOV R5, #1h
0058 2080E7             53             JB BUTTON, BTN_LOOP
                        54
                        55
                        56     START_TIMER:
005B 758BFC             57             mov tl1, #0FCh ; working #0C0h
005E 758DFC             58             mov th1, #0FCh ; working #0C0h
0061 758AFC             59             mov tl0, #0FCh ; working #0C0h
0064 758CFC             60             mov th0, #0FCh ; working #0C0h
0067 D28C               61             setb tr0 ; startet timer
0069 80E4               62             JMP PRESSED
                        63
                        64
                        65     START_WAIT_TIMER:
006B 7D00               66             MOV R5, #0
006D 758BFC             67             mov tl1, #0FCh ; working #0C0h
0070 758DFC             68             mov th1, #0FCh ; working #0C0h
0073 758AFC             69             mov tl0, #0FCh ; working #0C0h
0076 758CFC             70             mov th0, #0FCh ; working #0C0h
0079 D28E               71             setb tr1 ; startet timer
007B 80C5               72             JMP BTN_LOOP
                        73
                        74
                        75     LONG_PRESS_DETECED:
007D 7901               76             mov r1,#1 ;save long press at R1
007F C28C               77             clr tr0 ;stop timer
0081 22                 78             RET
                        79
                        80
                        81     ANALYZE_PREV:
0082 EA                 82             MOV A, R2
0083 B9011A             83             CJNE R1, #1h, SHORT_PRESS; if (not longpress)
0086 B90011             84             CJNE R1, #0h, LONG_PRESS;
                        85
                        86
                        87     ANALYZE_PREV2:
0089 FA                 88             MOV R2, A
008A 7801               89             MOV R0, #1
008C 7900               90             MOV R1, #0
008E 7D01               91             MOV R5, #1h
                        92
0090 EE                 93             MOV A, R6
0091 D2E0               94             SETB A.0
0093 23                 95             RL A
0094 20E40F             96             JB A.4, TIME_OVER_2
                        97     BACK_AGAIN:
0097 FE                 98             MOV R6, A
0098 80A8               99             JMP BTN_LOOP
                       100
                       101
                       102     LONG_PRESS:
009A 23                103             RL A
009B D2E0              104             SETB A.0
009D 23                105             RL A
009E 80E9              106             JMP ANALYZE_PREV2
                       107
                       108
                       109     SHORT_PRESS:
00A0 23                110             RL A
00A1 23                111             RL A
00A2 D2E0              112             SETB A.0
00A4 80E3              113             JMP ANALYZE_PREV2
                       114
                       115
                       116     TIME_OVER_2:
00A6 C28E              117             CLR tr1
00A8 1200B9            118             Call ENCODE_BITMASK
00AB 7801              119             MOV R0, #1h
00AD 7D00              120             MOV R5, #0h
00AF 80E6              121             JMP BACK_AGAIN
                       122
                       123     TIME_OVER:
00B1 C28E              124             CLR tr1
00B3 1200B9            125             Call ENCODE_BITMASK
00B6 7801              126             MOV R0, #1h
00B8 22                127             RET
                       128
                       129     ENCODE_BITMASK:
00B9 EA                130             MOV A, R2
00BA B40602            131             CJNE A, #00000110b, ENCODE_BITMASK + 6; A
00BD 7B00              132             MOV R3, #0d
00BF B49502            133             CJNE A, #10010101b, ENCODE_BITMASK + 11; B
00C2 7B01              134             MOV R3, #1d
00C4 B49902            135             CJNE A, #10011001b, ENCODE_BITMASK + 16; C
00C7 7B02              136             MOV R3, #2d
00C9 B42502            137             CJNE A, #00100101b, ENCODE_BITMASK + 21; D
00CC 7B03              138             MOV R3, #3d
00CE B40102            139             CJNE A, #00000001b, ENCODE_BITMASK + 26; E
00D1 7B04              140             MOV R3, #4d
00D3 B45902            141             CJNE A, #01011001b, ENCODE_BITMASK + 31; F
00D6 7B05              142             MOV R3, #5d
00D8 B42902            143             CJNE A, #00101001b, ENCODE_BITMASK + 36; G
00DB 7B06              144             MOV R3, #6d
00DD B45502            145             CJNE A, #01010101b, ENCODE_BITMASK + 41; H
00E0 7B07              146             MOV R3, #7d
00E2 B40502            147             CJNE A, #00000101b, ENCODE_BITMASK + 46; I
00E5 7B08              148             MOV R3, #8d
00E7 B46A02            149             CJNE A, #01101010b, ENCODE_BITMASK + 51; J
00EA 7B09              150             MOV R3, #9d
00EC B42602            151             CJNE A, #00100110b, ENCODE_BITMASK + 56; K
00EF 7B0A              152             MOV R3, #10d
00F1 B46502            153             CJNE A, #01100101b, ENCODE_BITMASK + 61; L
00F4 7B0B              154             MOV R3, #11d
00F6 B40A02            155             CJNE A, #00001010b, ENCODE_BITMASK + 66; M
00F9 7B0C              156             MOV R3, #12d
00FB B40902            157             CJNE A, #00001001b, ENCODE_BITMASK + 71; N
00FE 7B0D              158             MOV R3, #13d
0100 B42A02            159             CJNE A, #00101010b, ENCODE_BITMASK + 76; O
0103 7B0E              160             MOV R3, #14d
0105 B46902            161             CJNE A, #01101001b, ENCODE_BITMASK + 81; P
0108 7B0F              162             MOV R3, #15d
010A B4A602            163             CJNE A, #10100110b, ENCODE_BITMASK + 86; Q
010D 7B10              164             MOV R3, #16d
010F B41902            165             CJNE A, #00011001b, ENCODE_BITMASK + 91; R
0112 7B11              166             MOV R3, #17d
0114 B41502            167             CJNE A, #00010101b, ENCODE_BITMASK + 96; S
0117 7B12              168             MOV R3, #18d
0119 B40202            169             CJNE A, #00000010b, ENCODE_BITMASK + 101; T
011C 7B13              170             MOV R3, #19d
011E B41602            171             CJNE A, #00010110b, ENCODE_BITMASK + 106; U
0121 7B14              172             MOV R3, #20d
0123 B45602            173             CJNE A, #01010110b, ENCODE_BITMASK + 111; V
0126 7B15              174             MOV R3, #21d
0128 B41A02            175             CJNE A, #00011010b, ENCODE_BITMASK + 116; W
012B 7B16              176             MOV R3, #22d
012D B49602            177             CJNE A, #10010110b, ENCODE_BITMASK + 121; X
0130 7B17              178             MOV R3, #23d
0132 B49A02            179             CJNE A, #10011010b, ENCODE_BITMASK + 126; Y
0135 7B18              180             MOV R3, #24d
0137 B4A502            181             CJNE A, #10100101b, ENCODE_BITMASK + 131; Z
013A 7B19              182             MOV R3, #25d
013C EB                183             MOV A, R3
013D 2441              184             ADD A, #65d ; A is asci 65
013F FC                185             MOV R4, A ; save value for led display
0140 7BBE              186             MOV R3, #190d; reset r3 to error: 190 + 65 = 255
0142 120172            187             CALL DISPLAY_LETTER
0145 7A00              188             MOV R2, #0h
0147 7E00              189             MOV R6, #0h
0149 22                190             RET
                       191
                       192     CMND:
014A 3164              193             ACALL READY
014C C281              194             CLR P0.1
014E C282              195             CLR P0.2
0150 F590              196             MOV P1, A
0152 D283              197             SETB P0.3
0154 C283              198             CLR P0.3
0156 22                199             RET
                       200
                       201     DISPLAY:
0157 3164              202             ACALL READY
0159 F590              203             MOV P1, A
015B D281              204             SETB P0.1
015D C282              205             CLR P0.2
015F D283              206             SETB P0.3
0161 C283              207             CLR P0.3
0163 22                208             RET
                       209
                       210     READY:
0164 D297              211             SETB P1.7
0166 C281              212             CLR P0.1
0168 D282              213             SETB P0.2
                       214     BACK:
016A D283              215             SETB P0.3
016C C283              216             CLR P0.3
016E 2097F9            217             JB P1.7, BACK
0171 22                218             RET
                       219     ;Set R/W Pin of the LCD HIGH(read from the LCD)
                       220     ;Select the instruction register by setting RS pin LOW
                       221     ;Enable the LCD by Setting the enable pin HIGH
                       222     ; The most significant bit of the LCD data bus is the state of the busy flag(1=Busy,0=ready to accept
                       223
                       224     DISPLAY_LETTER:
0172 EC                225             MOV A, R4
0173 3157              226             ACALL DISPLAY
0175 22                227             RET
                       228
****WARNING:Missing`END'directive
ASSEMBLY COMPLETE, NO ERRORS FOUND, 1 WARNING


ERROR SUMMARY:
Line 228, WARNING:Missing`END'directive

SYMBOL TABLE:
??MCU_8051_IDE . . . . . . . . . . .  N  NUMB  8051H  NOT USED
??VERSION. . . . . . . . . . . . . .  N  NUMB  0149H  NOT USED
AC . . . . . . . . . . . . . . . . .  B  ADDR  00D6H  NOT USED
ACC. . . . . . . . . . . . . . . . .  D  ADDR  00E0H  NOT USED
ACSR . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
ADCF . . . . . . . . . . . . . . . .  D  ADDR  00F6H  NOT USED
ADCLK. . . . . . . . . . . . . . . .  D  ADDR  00F2H  NOT USED
ADCON. . . . . . . . . . . . . . . .  D  ADDR  00F3H  NOT USED
ADDH . . . . . . . . . . . . . . . .  D  ADDR  00F5H  NOT USED
ADDL . . . . . . . . . . . . . . . .  D  ADDR  00F4H  NOT USED
ANALYZE_PREV . . . . . . . . . . . .  C  ADDR  0082H
ANALYZE_PREV2. . . . . . . . . . . .  C  ADDR  0089H
AUXR . . . . . . . . . . . . . . . .  D  ADDR  008EH  NOT USED
AUXR1. . . . . . . . . . . . . . . .  D  ADDR  00A2H  NOT USED
B. . . . . . . . . . . . . . . . . .  D  ADDR  00F0H  NOT USED
BACK . . . . . . . . . . . . . . . .  C  ADDR  016AH
BACK_AGAIN . . . . . . . . . . . . .  C  ADDR  0097H
BDRCON . . . . . . . . . . . . . . .  D  ADDR  009BH  NOT USED
BDRCON_1 . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
BRL. . . . . . . . . . . . . . . . .  D  ADDR  009AH  NOT USED
BTN_LOOP . . . . . . . . . . . . . .  C  ADDR  0042H
BUTTON . . . . . . . . . . . . . . .  N  NUMB  0080H
CCAP0H . . . . . . . . . . . . . . .  D  ADDR  00FAH  NOT USED
CCAP0L . . . . . . . . . . . . . . .  D  ADDR  00EAH  NOT USED
CCAP1H . . . . . . . . . . . . . . .  D  ADDR  00FBH  NOT USED
CCAP1L . . . . . . . . . . . . . . .  D  ADDR  00EBH  NOT USED
CCAP2H . . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAP3H . . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAP4H . . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL2H. . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAPL2L. . . . . . . . . . . . . . .  D  ADDR  00ECH  NOT USED
CCAPL3H. . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAPL3L. . . . . . . . . . . . . . .  D  ADDR  00EDH  NOT USED
CCAPL4H. . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL4L. . . . . . . . . . . . . . .  D  ADDR  00EEH  NOT USED
CCAPM0 . . . . . . . . . . . . . . .  D  ADDR  00DAH  NOT USED
CCAPM1 . . . . . . . . . . . . . . .  D  ADDR  00DBH  NOT USED
CCAPM2 . . . . . . . . . . . . . . .  D  ADDR  00DCH  NOT USED
CCAPM3 . . . . . . . . . . . . . . .  D  ADDR  00DDH  NOT USED
CCAPM4 . . . . . . . . . . . . . . .  D  ADDR  00DEH  NOT USED
CCF0 . . . . . . . . . . . . . . . .  B  ADDR  00D8H  NOT USED
CCF1 . . . . . . . . . . . . . . . .  B  ADDR  00D9H  NOT USED
CCF2 . . . . . . . . . . . . . . . .  B  ADDR  00DAH  NOT USED
CCF3 . . . . . . . . . . . . . . . .  B  ADDR  00DBH  NOT USED
CCF4 . . . . . . . . . . . . . . . .  B  ADDR  00DCH  NOT USED
CCON . . . . . . . . . . . . . . . .  D  ADDR  00D8H  NOT USED
CFINT. . . . . . . . . . . . . . . .  C  ADDR  0033H  NOT USED
CH . . . . . . . . . . . . . . . . .  D  ADDR  00F9H  NOT USED
CKCON. . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKCON0 . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKRL . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
CKSEL. . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
CL . . . . . . . . . . . . . . . . .  D  ADDR  00E9H  NOT USED
CLKREG . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CMND . . . . . . . . . . . . . . . .  C  ADDR  014AH
CMOD . . . . . . . . . . . . . . . .  D  ADDR  00D9H  NOT USED
CPRL2. . . . . . . . . . . . . . . .  B  ADDR  00C8H  NOT USED
CR . . . . . . . . . . . . . . . . .  B  ADDR  00DEH  NOT USED
CT2. . . . . . . . . . . . . . . . .  B  ADDR  00C9H  NOT USED
CY . . . . . . . . . . . . . . . . .  B  ADDR  00D7H  NOT USED
DISPLAY. . . . . . . . . . . . . . .  C  ADDR  0157H
DISPLAY_LETTER . . . . . . . . . . .  C  ADDR  0172H
DP0H . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DP0L . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
DP1H . . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
DP1L . . . . . . . . . . . . . . . .  D  ADDR  0084H  NOT USED
DPH. . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DPL. . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
EA . . . . . . . . . . . . . . . . .  B  ADDR  00AFH  NOT USED
EC . . . . . . . . . . . . . . . . .  B  ADDR  00AEH  NOT USED
EECON. . . . . . . . . . . . . . . .  D  ADDR  0096H  NOT USED
ENCODE_BITMASK . . . . . . . . . . .  C  ADDR  00B9H
ES . . . . . . . . . . . . . . . . .  B  ADDR  00ACH  NOT USED
ET0. . . . . . . . . . . . . . . . .  B  ADDR  00A9H  NOT USED
ET1. . . . . . . . . . . . . . . . .  B  ADDR  00ABH  NOT USED
ET2. . . . . . . . . . . . . . . . .  B  ADDR  00ADH  NOT USED
EX0. . . . . . . . . . . . . . . . .  B  ADDR  00A8H  NOT USED
EX1. . . . . . . . . . . . . . . . .  B  ADDR  00AAH  NOT USED
EXEN2. . . . . . . . . . . . . . . .  B  ADDR  00CBH  NOT USED
EXF2 . . . . . . . . . . . . . . . .  B  ADDR  00CEH  NOT USED
EXTI0. . . . . . . . . . . . . . . .  C  ADDR  0003H  NOT USED
EXTI1. . . . . . . . . . . . . . . .  C  ADDR  0013H  NOT USED
F0 . . . . . . . . . . . . . . . . .  B  ADDR  00D5H  NOT USED
FE . . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
IE . . . . . . . . . . . . . . . . .  D  ADDR  00A8H
IE0. . . . . . . . . . . . . . . . .  B  ADDR  0089H  NOT USED
IE1. . . . . . . . . . . . . . . . .  B  ADDR  008BH  NOT USED
INIT . . . . . . . . . . . . . . . .  C  ADDR  001FH
INT0 . . . . . . . . . . . . . . . .  B  ADDR  00B2H  NOT USED
INT1 . . . . . . . . . . . . . . . .  B  ADDR  00B3H  NOT USED
IP . . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPH. . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH0 . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH1 . . . . . . . . . . . . . . . .  D  ADDR  00B3H  NOT USED
IPL0 . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPL1 . . . . . . . . . . . . . . . .  D  ADDR  00B2H  NOT USED
IT0. . . . . . . . . . . . . . . . .  B  ADDR  0088H  NOT USED
IT1. . . . . . . . . . . . . . . . .  B  ADDR  008AH  NOT USED
KBE. . . . . . . . . . . . . . . . .  D  ADDR  009DH  NOT USED
KBF. . . . . . . . . . . . . . . . .  D  ADDR  009EH  NOT USED
KBLS . . . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
LONG_PRESS . . . . . . . . . . . . .  C  ADDR  009AH
LONG_PRESS_DETECED . . . . . . . . .  C  ADDR  007DH
OSCCON . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
OV . . . . . . . . . . . . . . . . .  B  ADDR  00D2H  NOT USED
P. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H  NOT USED
P0 . . . . . . . . . . . . . . . . .  D  ADDR  0080H
P1 . . . . . . . . . . . . . . . . .  D  ADDR  0090H
P1M1 . . . . . . . . . . . . . . . .  D  ADDR  00D4H  NOT USED
P1M2 . . . . . . . . . . . . . . . .  D  ADDR  00E2H  NOT USED
P2 . . . . . . . . . . . . . . . . .  D  ADDR  00A0H  NOT USED
P3 . . . . . . . . . . . . . . . . .  D  ADDR  00B0H  NOT USED
P3M1 . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
P3M2 . . . . . . . . . . . . . . . .  D  ADDR  00E3H  NOT USED
P4 . . . . . . . . . . . . . . . . .  D  ADDR  00C0H  NOT USED
P4M1 . . . . . . . . . . . . . . . .  D  ADDR  00D6H  NOT USED
P4M2 . . . . . . . . . . . . . . . .  D  ADDR  00E4H  NOT USED
P5 . . . . . . . . . . . . . . . . .  D  ADDR  00E8H  NOT USED
PC . . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PCON . . . . . . . . . . . . . . . .  D  ADDR  0087H  NOT USED
PPCL . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PRESSED. . . . . . . . . . . . . . .  C  ADDR  004FH
PS . . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSL. . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSW. . . . . . . . . . . . . . . . .  D  ADDR  00D0H  NOT USED
PT0. . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT0L . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT1. . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT1L . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT2. . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PT2L . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PX0. . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX0L . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX1. . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
PX1L . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
RB8. . . . . . . . . . . . . . . . .  B  ADDR  009AH  NOT USED
RCAP2H . . . . . . . . . . . . . . .  D  ADDR  00CBH  NOT USED
RCAP2L . . . . . . . . . . . . . . .  D  ADDR  00CAH  NOT USED
RCLK . . . . . . . . . . . . . . . .  B  ADDR  00CDH  NOT USED
RD . . . . . . . . . . . . . . . . .  B  ADDR  00B7H  NOT USED
READY. . . . . . . . . . . . . . . .  C  ADDR  0164H
REN. . . . . . . . . . . . . . . . .  B  ADDR  009CH  NOT USED
RESET. . . . . . . . . . . . . . . .  C  ADDR  0000H  NOT USED
RI . . . . . . . . . . . . . . . . .  B  ADDR  0098H  NOT USED
RS0. . . . . . . . . . . . . . . . .  B  ADDR  00D3H  NOT USED
RS1. . . . . . . . . . . . . . . . .  B  ADDR  00D4H  NOT USED
RXD. . . . . . . . . . . . . . . . .  B  ADDR  00B0H  NOT USED
SADDR. . . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_0. . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_1. . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SADEN. . . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_0. . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_1. . . . . . . . . . . . . . .  D  ADDR  00BAH  NOT USED
SBUF . . . . . . . . . . . . . . . .  D  ADDR  0099H  NOT USED
SCON . . . . . . . . . . . . . . . .  D  ADDR  0098H  NOT USED
SHORT_PRESS. . . . . . . . . . . . .  C  ADDR  00A0H
SINT . . . . . . . . . . . . . . . .  C  ADDR  0023H  NOT USED
SM0. . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
SM1. . . . . . . . . . . . . . . . .  B  ADDR  009EH  NOT USED
SM2. . . . . . . . . . . . . . . . .  B  ADDR  009DH  NOT USED
SP . . . . . . . . . . . . . . . . .  D  ADDR  0081H  NOT USED
SPCON. . . . . . . . . . . . . . . .  D  ADDR  00C3H  NOT USED
SPCR . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
SPDAT. . . . . . . . . . . . . . . .  D  ADDR  00C5H  NOT USED
SPDR . . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
SPSR . . . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SPSTA. . . . . . . . . . . . . . . .  D  ADDR  00C4H  NOT USED
START_TIMER. . . . . . . . . . . . .  C  ADDR  005BH
START_WAIT_TIMER . . . . . . . . . .  C  ADDR  006BH
T0 . . . . . . . . . . . . . . . . .  B  ADDR  00B4H  NOT USED
T1 . . . . . . . . . . . . . . . . .  B  ADDR  00B5H  NOT USED
T2CON. . . . . . . . . . . . . . . .  D  ADDR  00C8H  NOT USED
T2MOD. . . . . . . . . . . . . . . .  D  ADDR  00C9H  NOT USED
TB8. . . . . . . . . . . . . . . . .  B  ADDR  009BH  NOT USED
TCLK . . . . . . . . . . . . . . . .  B  ADDR  00CCH  NOT USED
TCON . . . . . . . . . . . . . . . .  D  ADDR  0088H  NOT USED
TF0. . . . . . . . . . . . . . . . .  B  ADDR  008DH  NOT USED
TF1. . . . . . . . . . . . . . . . .  B  ADDR  008FH  NOT USED
TF2. . . . . . . . . . . . . . . . .  B  ADDR  00CFH  NOT USED
TH0. . . . . . . . . . . . . . . . .  D  ADDR  008CH
TH1. . . . . . . . . . . . . . . . .  D  ADDR  008DH
TH2. . . . . . . . . . . . . . . . .  D  ADDR  00CDH  NOT USED
TI . . . . . . . . . . . . . . . . .  B  ADDR  0099H  NOT USED
TIMER0 . . . . . . . . . . . . . . .  C  ADDR  000BH  NOT USED
TIMER1 . . . . . . . . . . . . . . .  C  ADDR  001BH  NOT USED
TIMER2 . . . . . . . . . . . . . . .  C  ADDR  002BH  NOT USED
TIMER_START. . . . . . . . . . . . .  N  NUMB  002AH  NOT USED
TIME_OVER. . . . . . . . . . . . . .  C  ADDR  00B1H
TIME_OVER_2. . . . . . . . . . . . .  C  ADDR  00A6H
TL0. . . . . . . . . . . . . . . . .  D  ADDR  008AH
TL1. . . . . . . . . . . . . . . . .  D  ADDR  008BH
TL2. . . . . . . . . . . . . . . . .  D  ADDR  00CCH  NOT USED
TMOD . . . . . . . . . . . . . . . .  D  ADDR  0089H
TR0. . . . . . . . . . . . . . . . .  B  ADDR  008CH
TR1. . . . . . . . . . . . . . . . .  B  ADDR  008EH
TR2. . . . . . . . . . . . . . . . .  B  ADDR  00CAH  NOT USED
TXD. . . . . . . . . . . . . . . . .  B  ADDR  00B1H  NOT USED
WDTCON . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTPRG . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTRST . . . . . . . . . . . . . . .  D  ADDR  00A6H  NOT USED
WR . . . . . . . . . . . . . . . . .  B  ADDR  00B6H  NOT USED